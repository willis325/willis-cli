#! /usr/bin/env node
import { program } from 'commander';
import l from 'chalk';
import E from 'ora';
import b from 'node:fs';
import w from 'node:path';
import p from 'node:fs/promises';
import q from 'inquirer';
import I from 'node:util';
import P from 'download-git-repo';
import B from 'node:child_process';

var d={name:"willis-cli",type:"module",version:"0.0.1",description:"\u524D\u7AEF\u5E38\u7528\u529F\u80FD\u811A\u624B\u67B6\u5DE5\u5177\u96C6\u5408",author:"willis<793207918@qq.com>",bin:{"willis-cli":"bin/index.js"},scripts:{dev:"tsup --watch",build:"tsup",lint:"eslint --fix .",prettier:"prettier --write .",prepublishOnly:"npm run build",prepare:"npx simple-git-hooks"},repository:{type:"git",url:"https://gitee.com/67one/willis-cli.git"},keywords:["willis","willis-cli","cli","inquirer","commander","download-git-repo","chalk","ora","simple-git-hooks","typescript","tsup"],license:"MIT","simple-git-hooks":{"pre-commit":"npm run lint && npm run prettier"},dependencies:{chalk:"^5.3.0",commander:"^12.1.0","download-git-repo":"^3.0.2",inquirer:"^12.0.0",ora:"^8.1.0"},devDependencies:{"@types/node":"^22.7.6","@typescript-eslint/eslint-plugin":"^8.10.0","@typescript-eslint/parser":"^8.10.0",eslint:"^8.57.1",prettier:"^3.3.3","simple-git-hooks":"^2.11.1",tsup:"^8.3.0",typescript:"^5.6.3"}};function f(e){return q.prompt([{name:"name",type:"input",default:e,message:"\u8BF7\u8F93\u5165\u4F60\u7684\u9879\u76EE\u540D\u79F0",filter:t=>t.trim(),validate:t=>t?!0:"\u9879\u76EE\u540D\u79F0\u5FC5\u586B"},{name:"repo",type:"input",message:`\u8BF7\u8F93\u5165\u4F60\u8981\u514B\u9686\u7684\u6A21\u677F\u4ED3\u5E93 git \u5730\u5740
  ${l.gray("GitHub - github:owner/name or simply owner/name")}
  ${l.gray("GitLab - gitlab:owner/name")}
  ${l.gray("Bitbucket - bitbucket:owner/name")}
  ${l.gray("\u79C1\u6709\u4ED3\u5E93 - git \u4ED3\u5E93\u94FE\u63A5\u5730\u5740\uFF08https://github.com/willis325/willis-cli.git\uFF09")}
  ${l.gray("\u66F4\u591A\u8F93\u5165\u683C\u5F0F\u4FE1\u606F\u8BF7\u770B https://www.npmjs.com/package/download-git-repo")}
 `,filter:t=>t.trim(),validate:t=>t?!0:"git \u4ED3\u5E93\u5FC5\u586B"}])}var x=I.promisify(P);async function h(e,t){let r=E("\u6A21\u677F\u4E0B\u8F7D\u4E2D..."),{name:n,repo:s}=await f(e);try{r.start();let c=w.resolve(process.cwd(),n);await C(!!(t!=null&&t.force),c);let m=(s.endsWith(".zip")||s.endsWith(".git")?"direct:":"")+s,S=s.endsWith(".git")?{clone:!0}:{};await x(m,c,S),await D(c,n),await F(c,n),r.succeed("\u9879\u76EE\u521B\u5EFA\u6210\u529F\uFF01\uFF01\uFF01"),r.succeed("\u{1F60A}\u{1F60A}\u{1F60A}");}catch(c){r.fail(l.red(c)),process.exit(1);}}async function C(e,t){if(b.existsSync(t))if(e)await p.rm(t,{recursive:!0,force:!0});else throw new Error("\u9879\u76EE\u5DF2\u5B58\u5728\uFF0C-f \u53EF\u5F3A\u5236\u8986\u76D6");await p.rm(t,{recursive:!0,force:!0});}async function D(e,t){let r=w.resolve(e,"package.json"),n=await p.readFile(r,{encoding:"utf-8"}),s=JSON.parse(n);await p.writeFile(r,n.replaceAll(s.name,t),{encoding:"utf-8"});}async function F(e,t){let r=w.resolve(e,"index.html");if(!b.existsSync(r))return;let n=await p.readFile(r,{encoding:"utf-8"});await p.writeFile(r,n.replace(/<title.*?>(.*?)<\/title>/gi,`<title>${t}</title>`),{encoding:"utf-8"});}var G=I.promisify(B.exec),i=async(e,t={})=>(await G(e,t)).stdout;var o=async(e,t)=>{let r=await t;e.info(r);};async function y(e){let t=E("docker\u547D\u4EE4\u8FD0\u884C\u4E2D...");try{t.start(),await o(t,i("docker ps -a")),await o(t,i("docker images"));let{name:r}=await q.prompt([{name:"name",type:"input",default:e,message:"\u8BF7\u8F93\u5165\u4F60\u7684\u5BB9\u5668\u540D\u79F0",filter:m=>m.trim(),validate:m=>m?!0:"\u5BB9\u5668\u540D\u79F0\u5FC5\u586B"}]),n=await i("docker ps -a | grep '"+r+"' | awk '{ print $1 }' | xargs docker stop | xargs docker rm -f");t.info(`\u505C\u6B62\u5E76\u5220\u9664\u5BB9\u5668${n}`);let s=await i("docker images | grep '"+r+"' | awk '{ print $3 }' | xargs docker rmi -f");t.info(`\u5220\u9664\u955C\u50CF${s}`);let c=await i("docker compose up -d --no-recreate --no-deps --build");t.info(`\u91CD\u65B0\u6784\u5EFA\u5E76\u91CD\u542F${c}`),await o(t,i("docker ps -a")),t.succeed("\u9879\u76EE\u66F4\u65B0\u6210\u529F\uFF01\uFF01\uFF01"),t.succeed("\u{1F60A}\u{1F60A}\u{1F60A}");}catch(r){t.fail(l.red(r)),process.exit(1);}}async function k(){let e=E("git\u4ED3\u5E93\u66F4\u65B0\u4E2D...");try{if(e.start(),await o(e,a("\u5F53\u524D\u76EE\u5F55",i("pwd"))),await o(e,a("\u5F53\u524D\u5206\u652F",v())),!await $())throw new Error("\u5F53\u524D\u5206\u652F\u6709\u672A\u63D0\u4EA4\u7684\u4EE3\u7801\uFF0C\u8BF7\u68C0\u67E5\u5904\u7406\u540E\uFF0C\u91CD\u65B0\u8FD0\u884C\u547D\u4EE4\uFF01");if(await v()!=="master"&&await o(e,a("\u5207\u6362\u5230master\u5206\u652F",i("git checkout master"))),await o(e,a("git fetch",i("git fetch"))),await o(e,a("git pull",i("git pull origin master"))),await o(e,a("git merge",i("git merge origin/dev"))),!await $())throw new Error("\u6709\u672A\u89E3\u51B3\u7684\u51B2\u7A81\uFF0C\u8BF7\u624B\u52A8\u89E3\u51B3\u540E\u624B\u52A8\u66F4\u65B0");if(await o(e,a("git show",i("git show --no-patch"))),!(await q.prompt([{name:"judge",type:"confirm",message:"\u8BF7\u786E\u8BA4\u662F\u5426\u63A8\u9001master\u5206\u652F\u5230\u8FDC\u7A0B\u4ED3\u5E93\uFF1F"}])).judge)throw new Error("\u60A8\u5DF2\u53D6\u6D88\u66F4\u65B0");await o(e,a("git push",i("git push origin master"))),await o(e,a("git log",i('git log --since="today" --pretty=format:"%nAuthor: %an %nDate: %cd %nCommit: %H %nMessage: %s" --date=iso'))),await o(e,a("git log",i('git log -1 --until="yesterday" --pretty=format:"%nAuthor: %an %nDate: %cd %nCommit: %H %nMessage: %s" --date=iso'))),e.succeed("\u66F4\u65B0\u6210\u529F\uFF01\uFF01\uFF01"),e.succeed("\u{1F60A}\u{1F60A}\u{1F60A}");}catch(t){e.fail(l.red(t)),process.exit(1);}}async function v(){return (await i("git branch --show-current")).trim()}async function $(){return (await i("git status")).includes("nothing to commit, working tree clean")}async function a(e,t){let r=await t;return e+"\uFF1A"+r}program.name(d.name).usage("<command> [options]").description(l.greenBright(d.description)).version(d.version);program.command("create [project-name]").description(l.green("\u6839\u636E git \u6A21\u677F\u4ED3\u5E93\u5FEB\u901F\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u9879\u76EE")).option("-f --force",l.green("\u5F3A\u5236\u8986\u76D6\uFF0C\u5982\u679C\u5F53\u524D\u76EE\u5F55\u5DF2\u5B58\u5728\u540C\u540D\u76EE\u5F55")).action(h);program.command("deploy [container-name]").description(l.green("\u91CD\u65B0\u6784\u5EFA docker \u955C\u50CF\uFF0C\u5E76\u91CD\u542F\u955C\u50CF\u670D\u52A1")).action(y);program.command("publish").description(l.green("\u66F4\u65B0 master \u4E3B\u5E72\uFF0C\u9002\u7528\u4E8E dev/master \u6A21\u578B\u5206\u652F\u4ED3\u5E93")).action(k);program.parse(process.argv);
